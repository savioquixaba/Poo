import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class JogoDaForca {
		private ArrayList<String> palavras = new ArrayList<>(); // lista de palavras lidas do arquivo
		private ArrayList<String> dicas = new ArrayList<>(); // lista de dicas lidas do arquivo
		private String dica=""; // dica da palavra sorteada
		private String[] letras; // letras da palavra sorteada
		private int acertos = 0; // contador de acertos
		private String[] penalidade = {"pés", "pernas", "mãos", "braços", "tronco", "cabeça"};// penalidade atual
		private String [] arquivos = {"pes.jpg", "pernas.jpg", "maos.jpg", "bracos,jpg", "tronco,jpg", "cabeca.jpg"};// 
	
		
    
    public JogoDaForca(String nomearquivo) throws Exception {
		try {
			this.arquivo = nomearquivo;
			Scanner aarq = new Scanner(new File(arquivo));

			while(aarq.hasNextLine()) {
				String[] letra_sorteada = aarq.nextLine().split(";");

				this.palavras.add(letra_sorteada[0]);
				this.dicas.add(letra_sorteada[1]);			
				
			}	 
	}

	}catch(FileNotFoundException e) {
		throw new Exception ("Arquivo Inexistente");
	}

}
		public void iniciar() {
			Random sorteio = new Random();
      int y = sorteio.nextInt(palavras.size());
      
      this.letras = palavras.get(0).split("");
      this.dica = dicas.get(1);
			
		}
		public String getDica() {
			return this.dica;
		}
		
		public int getTamanho() {
			return this.letras.length;
		}
		
		public ArrayList<Integer> getPosicoes(String letra) throws Exception{
		
			try {
			
			
			boolean letra_repetida = false;
			
			if (this.palavras.contains(letra.toUpperCase())) {
				for(int x = 0; x < this.letras.length; x++) {
					
					if(letra.toUpperCase().equals(this.letras[x])) {
						System.out.println("Letra repetida!!");
						
						letra_repetida = true;
						this.erros += 1;
						
						}
	    		}
				if(letra_repetida == false) {
		    		String[] letras = palavras.split("");
		    		for(int i=0 ; i<palavras.size(); i++) {
		    			if(letras[i].equals(letra.toUpperCase())) {
		    				
		    				this.acertos =(this.acertos + 1);
		    				}
		    			
		    			}
		    		letras[this.count_position]  = letra.toUpperCase();
		    		//System.out.println(Arrays.toString(letras_reveladas));
					//this.palavra = this.palavra.replaceAll(letra,"X");
					this.count_position = (this.count_position + 1);
		    		}
				}else {
					this.erros += 1;
					return false;
				}
					return true;
		    	}
			}
			
		}
		}
		
}
		
